/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panelComponents;

import Controllers.systemController;
import Models.Messages;
import Models.SystemConfigurations;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;

/**
 *
 * @author ARTEMISA
 */
public class editTicket extends javax.swing.JPanel {

    /**
     * Creates new form editTicket
     */
    String Class = "editTicket";
    systemController sysConf = systemController.getInstance();
    SystemConfigurations Configs;

    public editTicket() {
        initComponents();
        this.setName("Act. Ticket");
    }

    public void updateConfigs() {
        Configs = sysConf.getSystemConfig();
    }

    public void setData() {
        updateConfigs();
        txtTerms.setText(Configs.getTerms());
        loadPrinters();
        loadPaperSizes();
    }

    public void loadPaperSizes() {
        cmbSizes.removeAllItems();
        cmbSizes.addItem("50mm");
        cmbSizes.addItem("80mm");
        cmbSizes.addItem("Letter");
        cmbSizes.setSelectedIndex(Configs.getPapersize());
    }

    public void loadPrinters() {
        cmbPrinters.removeAllItems();
        cmbPrinters.addItem("No Imprimir");
        cmbPrinters.addItem("Imprimir como PDF");
        PrintService[] ps = PrintServiceLookup.lookupPrintServices(null, null);
        for (PrintService p : ps) {
            cmbPrinters.addItem(p.getName());
        }
        cmbPrinters.setSelectedItem(Configs.getPrinter());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbPrinters = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbSizes = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtTerms = new javax.swing.JTextArea();
        btnSave = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setBorder(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Ticket de Compra");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Impresora Predeterminada");

        cmbPrinters.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tamaño de hoja...");

        cmbSizes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Terminos y Condiciones");

        txtTerms.setColumns(20);
        txtTerms.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtTerms.setLineWrap(true);
        txtTerms.setRows(5);
        txtTerms.setWrapStyleWord(true);
        txtTerms.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTermsKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtTerms);

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setText("Actualizar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbPrinters, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSizes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPrinters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSizes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        Update();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtTermsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTermsKeyPressed
        txtTerms.setBackground(Color.white);
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            evt.consume();
            btnSave.requestFocus();
        }
    }//GEN-LAST:event_txtTermsKeyPressed

    public boolean checkFields() {
        boolean resp = false;
        if (txtTerms.getText().trim().replace(" ", "").length() > 0) {
            resp = true;
        } else {
            txtTerms.requestFocus();
            txtTerms.setBackground(Color.yellow);
        }
        return resp;
    }

    public void Update() {
        try {
            if (checkFields()) {
                String text = "<html>"
                        + "<center>"
                        + "<b>"
                        + "¡VERIFIQUE SUS DATOS ANTES DE CONTINUAR!"
                        + "</b>"
                        + "<br>"
                        + "<br>"
                        + "¿Desea continuar?"
                        + "</center>"
                        + "</html>";
                if (new Messages().confirmMessage("Actualizar", text)) {
                    sysConf.updatePrinter(cmbPrinters.getSelectedItem().toString());
                    sysConf.updatePaperSize(cmbSizes.getSelectedIndex());
                    sysConf.updateTerms(txtTerms.getText());

                    new Messages().aceptMessage("Actualizar", "Datos Actualizados con Exito...");

                }
            }
        } catch (Exception e) {
            new Messages().errorMessage(Class, "updateSystemConfigFile()", e);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cmbPrinters;
    private javax.swing.JComboBox<String> cmbSizes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtTerms;
    // End of variables declaration//GEN-END:variables
}
