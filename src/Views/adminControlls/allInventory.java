/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.adminControlls;

import Controllers.dataController;
import Controllers.productController;
import Controllers.sessionController;
import Controllers.systemController;
import Models.Messages;
import Models.Product;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author ATENEA
 */
public class allInventory extends javax.swing.JFrame {

    /**
     * Creates new form gestProds
     */
    String Class = "allInventory";
    productController inventory = productController.getInstance();
    DefaultTableModel modelo;

    public allInventory() {
        initComponents();
    }

    public void loadFrame() {
//        this.setExtendedState(this.MAXIMIZED_BOTH);
        this.setTitle("Inventario");
        this.setIconImage(systemController.getInstance().getImageIcon().getImage());
        this.setLocationRelativeTo(sessionController.getInstance().getShowedFrame());
        loadTable();
        browse(txtBrowser.getText());
    }

//    public void ajustarColumnas() {
//        tableData.setRowHeight(40);
//        TableColumnModel colmodel = tableData.getColumnModel();
//        colmodel.getColumn(0).setPreferredWidth(20);
//        colmodel.getColumn(1).setPreferredWidth(250);
//        colmodel.getColumn(2).setPreferredWidth(80);
//        colmodel.getColumn(3).setPreferredWidth(80);
//        colmodel.getColumn(4).setPreferredWidth(80);
//        colmodel.getColumn(5).setPreferredWidth(20);
//        colmodel.getColumn(6).setPreferredWidth(30);
//        colmodel.getColumn(7).setPreferredWidth(30);
//        colmodel.getColumn(8).setPreferredWidth(80);
//
//    }

    public void setColumnSize(int Column, int Size) {
        TableColumn columna;
        int tamano = Size;
        columna = tableData.getColumnModel().getColumn(Column);
        columna.setPreferredWidth(tamano);
        columna.setMaxWidth(tamano);
        columna.setMinWidth(tamano);
    }

    public void loadTable() {
        modelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                if (columnas < 0) {
                    return true;
                } else {
                    return false;
                }
            }
        };
        modelo.addColumn("Codigo");
        modelo.addColumn("DescripciÃ³n");
        modelo.addColumn("Marca");
        modelo.addColumn("Tipo");
        modelo.addColumn("Mostrador");
        modelo.addColumn("Precio");
        modelo.addColumn("Cant");
        modelo.addColumn("Granel");
        modelo.addColumn("Creado");
        modelo.addColumn("Editado");
        tableData.setModel(modelo);
        
        tableData.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        setColumnSize(0, 60);

        setColumnSize(2, 60);
        setColumnSize(3, 80);
        setColumnSize(4, 80);

        setColumnSize(5, 50);
        setColumnSize(6, 50);
        setColumnSize(7, 50);
        setColumnSize(8, 75);
        setColumnSize(9, 75);

        tableData.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent Mouse_evt) {
                JTable table = (JTable) Mouse_evt.getSource();
                Point point = Mouse_evt.getPoint();
                int row = table.rowAtPoint(point);
                if (Mouse_evt.getClickCount() == 2 && Mouse_evt.getButton() == MouseEvent.BUTTON1) {
                    try {
                        String id = tableData.getValueAt(tableData.getSelectedRow(), 0).toString();
                        newProd np = new newProd(null, true);
                        np.updateProd(inventory.findbyID(id));
                        np.show();
                        browse(txtBrowser.getText());
                    } catch (Exception e) {
                        new Messages().errorMessage(Class, "loadTable()", e);
                    }
                }
            }
        }
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtBrowser = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        btnClose = new javax.swing.JButton();
        btnNewProd = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        btnLayout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("INVENTARIO");

        txtBrowser.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtBrowser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBrowserKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("BUSCAR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBrowser)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableData.setRowHeight(30);
        jScrollPane1.setViewportView(tableData);

        btnClose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClose.setText("Cerrar");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        btnNewProd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNewProd.setText("Nuevo Producto");
        btnNewProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewProdActionPerformed(evt);
            }
        });

        btnExport.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnExport.setText("Exportar");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnImport.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnImport.setText("Importar");
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        btnLayout.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLayout.setText("Descargar Plantilla");
        btnLayout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLayoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLayout)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNewProd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClose))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(btnNewProd)
                    .addComponent(btnExport)
                    .addComponent(btnImport)
                    .addComponent(btnLayout))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBrowserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBrowserKeyReleased
        browse(txtBrowser.getText());
    }//GEN-LAST:event_txtBrowserKeyReleased

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnNewProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewProdActionPerformed
        newProd();
    }//GEN-LAST:event_btnNewProdActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        ExportDB();
    }//GEN-LAST:event_btnExportActionPerformed

    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        ImportDB();
    }//GEN-LAST:event_btnImportActionPerformed

    private void btnLayoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLayoutActionPerformed
        downloadLayout();
    }//GEN-LAST:event_btnLayoutActionPerformed

    public void ImportDB() {
        dataController.getInstance().importDatabase();
    }

    public void ExportDB() {
        dataController.getInstance().exportDatabase();
    }

    public void downloadLayout() {
        dataController.getInstance().downloadLayout();
    }

    public void newProd() {
        newProd np = new newProd(this, true);
        np.newProduct();
        np.show();
        browse(txtBrowser.getText());
    }

    public void browse(String Pista) {
        if (Pista.trim().length() > 0) {
            findInInventory(Pista);
        } else {
            showAllInventory();
        }
    }

    public void findInInventory(String Index) {
        modelo.setRowCount(0);
        List<Product> invent = inventory.getDBProdbyIndex(Index);
        try {
            for (int i = 0; i < invent.size(); i++) {
                Product temp = invent.get(i);
                String bulk = "";
                if (temp.isBulk()) {
                    bulk = "Granel";
                } else {
                    bulk = "Unit";
                }
                String[] fila = {temp.getId() + "",
                    temp.getDescription(),
                    temp.getBrand(),
                    temp.getType(),
                    temp.getContainer(),
                    temp.getValue() + "",
                    temp.getInventory() + "",
                    bulk,
                    temp.getCreatedToString(),
                    temp.getEditedToString()};
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            new Messages().errorMessage(Class, "findInInventory()", e);
        }
    }

    public void showAllInventory() {
        modelo.setRowCount(0);
        try {
            for (int i = 0; i < inventory.getInventory().size(); i++) {
                Product temp = inventory.getInventory().get(i);
                String bulk = "";
                if (temp.isBulk()) {
                    bulk = "Granel";
                } else {
                    bulk = "Unit";
                }
                String[] fila = {temp.getId() + "",
                    temp.getDescription(),
                    temp.getBrand(),
                    temp.getType(),
                    temp.getContainer(),
                    temp.getValue() + "",
                    temp.getInventory() + "",
                    bulk,
                    temp.getCreatedToString(),
                    temp.getEditedToString()};
                modelo.addRow(fila);
            }
        } catch (Exception e) {
            new Messages().errorMessage(Class, "showAllInventory()", e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(allInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(allInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(allInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(allInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new allInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnLayout;
    private javax.swing.JButton btnNewProd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtBrowser;
    // End of variables declaration//GEN-END:variables
}
