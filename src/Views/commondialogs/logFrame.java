/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.commondialogs;

import Controllers.sessionController;
import Controllers.systemController;
import Controllers.userController;
import Models.Messages;
import Models.User;
import java.awt.Color;


/**
 *
 * @author ARTEMISA
 */
public class logFrame extends javax.swing.JFrame {

    /**
     * Creates new form logFrame
     */
    String Class = "logFrame";
    sessionController session = sessionController.getInstance();

    public logFrame() {
        try {
            this.setUndecorated(true);
            initComponents();
            this.setLocationRelativeTo(null);
            this.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                    exitApp();
                }
            });
        } catch (Exception e) {
            new Messages().errorMessage(Class, "loginDialog()", e);
        }
    }

    public void setData() {
        loadUserIcon();
        setIconImage(systemController.getInstance().getImageIcon().getImage());
    }

    public void loadUserIcon() {
        lblIcon.setText("");
        lblIcon.setIcon(systemController.getInstance().getUserImage(lblIcon.getWidth() / 2, lblIcon.getHeight()));
    }

    public boolean checkFields() {
        boolean resp = false;
        if (txt_user.getText().length() > 0) {
            if (txt_pasword.getText().length() > 0) {
                resp = true;
            } else {
                txt_pasword.requestFocus();
                txt_pasword.setBackground(Color.yellow);
            }
        } else {
            txt_user.requestFocus();
            txt_user.setBackground(Color.yellow);
        }
        return resp;
    }

    public void tryLogin() {
        try {
            if (checkFields()) {
                String user = txt_user.getText();
                String pwd = txt_pasword.getText();
                int tryLoggin = session.tryLoggin(user, pwd);
//                int tryLoggin = 3;
                if (tryLoggin == 0) {
                    User User = userController.getInstance().findByName(user);
                    sessionController.getInstance().saveNewLogin(User);
                    sessionController.getInstance().Loggin(User);
                    this.dispose();
                } else if (tryLoggin == 1) {
                    txt_user.setText("");
                    txt_pasword.setText("");
                    txt_user.requestFocus();
                    String text = "<html>"
                                + "<center>"
                                + "<b>"
                                + "¡ESTE USUARIO NO EXISTE!"
                                + "</b>"
                                + "<br>"
                                + "<br>"
                                + "El usuario no existe, favor de verificarlo..."
                                + "</center>"
                                + "</html>";
                    new Messages().closeMessage("Acceso Denegado", text);
                } else if (tryLoggin == 2) {
                    txt_pasword.setText("");
                    txt_pasword.requestFocus();
                    String text = "<html>"
                                + "<center>"
                                + "<b>"
                                + "¡CONTRASEÑA INVALIDA!"
                                + "</b>"
                                + "<br>"
                                + "<br>"
                                + "Contraseñas no coinciden, favor de verificarlo..."
                                + "</center>"
                                + "</html>";
                    new Messages().closeMessage("Acceso Denegado", text);
                }
            }
        } catch (Exception e) {
            new Messages().errorMessage(Class, "tryLogin()", e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBase = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txt_user = new javax.swing.JTextField();
        txt_pasword = new javax.swing.JPasswordField();
        btnLoggin = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlBase.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Contraseña");

        txt_user.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_userActionPerformed(evt);
            }
        });
        txt_user.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_userKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_userKeyTyped(evt);
            }
        });

        txt_pasword.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txt_pasword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_paswordActionPerformed(evt);
            }
        });
        txt_pasword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_paswordKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_paswordKeyTyped(evt);
            }
        });

        btnLoggin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLoggin.setText("Ingresar");
        btnLoggin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogginActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnExit.setText("Salir");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Usuario");

        lblIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIcon.setText("mainicon");

        javax.swing.GroupLayout pnlBaseLayout = new javax.swing.GroupLayout(pnlBase);
        pnlBase.setLayout(pnlBaseLayout);
        pnlBaseLayout.setHorizontalGroup(
            pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBaseLayout.createSequentialGroup()
                        .addComponent(btnLoggin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_pasword)
                            .addComponent(txt_user)))
                    .addGroup(pnlBaseLayout.createSequentialGroup()
                        .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlBaseLayout.setVerticalGroup(
            pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_pasword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlBaseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoggin)
                    .addComponent(btnExit))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_userActionPerformed
        tryLogin();
    }//GEN-LAST:event_txt_userActionPerformed

    private void txt_userKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_userKeyReleased
        txt_user.setBackground(Color.WHITE);
    }//GEN-LAST:event_txt_userKeyReleased

    private void txt_userKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_userKeyTyped
        if (txt_user.getText().length() >= 15) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_userKeyTyped

    private void txt_paswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_paswordActionPerformed
        tryLogin();
    }//GEN-LAST:event_txt_paswordActionPerformed

    private void txt_paswordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paswordKeyReleased
        txt_pasword.setBackground(Color.WHITE);
    }//GEN-LAST:event_txt_paswordKeyReleased

    private void txt_paswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_paswordKeyTyped
        if (txt_pasword.getText().length() >= 15) {
            evt.consume();
        }
    }//GEN-LAST:event_txt_paswordKeyTyped

    private void btnLogginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogginActionPerformed
        tryLogin();
    }//GEN-LAST:event_btnLogginActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        exitApp();
    }//GEN-LAST:event_btnExitActionPerformed

    public void exitApp() {
        sessionController.getInstance().exitApp();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(logFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(logFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(logFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(logFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new logFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLoggin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblIcon;
    private javax.swing.JPanel pnlBase;
    private javax.swing.JPasswordField txt_pasword;
    private javax.swing.JTextField txt_user;
    // End of variables declaration//GEN-END:variables
}
